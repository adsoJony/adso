/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.tables;

import view.pruebas.*;
import controller.Cliente;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import view.DashBoardAdso;
import static view.DashBoardAdso.cardLayout;
import static view.DashBoardAdso.dashboard;
import view.pruebas.DashboardApp;
import view.cliente.UpdateCliente;
import view.cliente.UpdateCliente;
import java.awt.CardLayout;
import javax.swing.JPanel;
import view.equipos.InsertUps;
import view.equipos.ListarUps;

/**
 *
 * @author jogof
 */
public class ClienteTable extends javax.swing.JPanel {

    //CardLayout cardLayout = new CardLayout();
    //JPanel dashboard = new JPanel();
    UpdateCliente updateCliente;
    ListarUps tableUps = new ListarUps();

    UpsTable upsTable = new UpsTable();

    /**
     * Creates new form JtableSwing
     *
     * @throws java.sql.SQLException
     */
    public ClienteTable() throws SQLException /*throws SQLException */ {
        this.updateCliente = new UpdateCliente();
        initComponents();

    }

    public ClienteTable(CardLayout cardLayout, JPanel dashboard, UpdateCliente updateCliente) throws SQLException {
        // this.cardLayout = cardLayout;
        //this.updateCliente = updateCliente;
        //this.dashboard = dashboard;
        initComponents();
        //cargarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButtonActualizar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonInicio = new javax.swing.JButton();
        jButtonListarUps = new javax.swing.JButton();
        jButtonIngresarUps = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(750, 378));

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableClientes);

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonInicio.setText("Inicio");
        jButtonInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInicioActionPerformed(evt);
            }
        });

        jButtonListarUps.setText("Listar Ups");
        jButtonListarUps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarUpsActionPerformed(evt);
            }
        });

        jButtonIngresarUps.setText("Ingresar Ups");
        jButtonIngresarUps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIngresarUpsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonListarUps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButtonIngresarUps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jButtonActualizar)
                .addGap(18, 18, 18)
                .addComponent(jButtonEliminar)
                .addGap(18, 18, 18)
                .addComponent(jButtonInicio)
                .addGap(18, 18, 18)
                .addComponent(jButtonListarUps)
                .addGap(18, 18, 18)
                .addComponent(jButtonIngresarUps)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed

        //  Mostramos un mensaje con los datos de la fila seleccionada
        int filaSeleccionada = jTableClientes.getSelectedRow();
        if (filaSeleccionada >= 0) {
            Object id = jTableClientes.getValueAt(filaSeleccionada, 0);
            //JOptionPane.showMessageDialog(null, "El ide seleccionado tiene el id; " + Integer.parseInt(id.toString()));

            try {

                Cliente c = new Cliente();
                c.setId_cliente(Integer.parseInt(id.toString()));
                c = c.findClienteById(Integer.parseInt(id.toString()));
                //DashBoardAdso updateCliente = new DashBoardAdso();
                updateCliente.setClienteUpdateFrm(c);

                DashBoardAdso.dashboard.add(updateCliente, "updateCliente");
                updateCliente.setFrm();

                //updateCliente.setearCamposClienteFrm(c);        //  Establecemos los campos en el panel de Update Cliente
                //update.setearCamposClienteFrm(c);
                //JOptionPane.showMessageDialog(null, "Cliente: " + c.toString());
                DashBoardAdso.cardLayout.show(DashBoardAdso.dashboard, "updateCliente");    //Se puede cambiar por 
                //cardLayout.show(dashboard, "updateCliente");
                //DashBoardAdso.dashboard.revalidate();
                //DashBoardAdso.dashboard.repaint();

//updateC.cargarMemoria(c);
            } catch (Exception e) {
            }

        } else {
            JOptionPane.showMessageDialog(null, "No ha seleccionado un cliente....");
        }
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:

        int filaSeleccionada = jTableClientes.getSelectedRow();
        if (filaSeleccionada >= 0) {
            Object id = jTableClientes.getValueAt(filaSeleccionada, 0);
            //int id_usuario

            try {
                Cliente cliente = new Cliente();
                cliente = cliente.findClienteById(Integer.parseInt(id.toString()));
                int idU = cliente.getId_usuario();
                if (cliente.deleteUserById(idU)) {
                    
                    cargarTabla();
                    
                    JOptionPane.showMessageDialog(null, "El Cliente se ha eliminado con exito.");
                } else {
                    JOptionPane.showMessageDialog(null,"No se pudo eliminar el Cliente de forma exitosa");

                }

            } catch (Exception e) {
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un cliente para borrar");
        }

    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInicioActionPerformed

        cardLayout.show(dashboard, "dashboardpanel");  //Nos dirige a la pagina central del dash
    }//GEN-LAST:event_jButtonInicioActionPerformed

    private void jButtonListarUpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarUpsActionPerformed
        // TODO add your handling code here:

        int filaSeleccionada = jTableClientes.getSelectedRow();
        if (filaSeleccionada >= 0) {
            Object id = jTableClientes.getValueAt(filaSeleccionada, 0);

            //JOptionPane.showMessageDialog(null, "El ide seleccionado tiene el id; " + Integer.parseInt(id.toString()));
            try {
                JOptionPane.showMessageDialog(null, "el id es: " + id.toString());

                UpsTable upsTable = new UpsTable();

                DashBoardAdso.dashboard.add(upsTable, "upsTable");

                upsTable.cargarTablaById(Integer.parseInt(id.toString()));

                DashBoardAdso.cardLayout.show(DashBoardAdso.dashboard, "upsTable");

                //int id_cliente = Integer.parseInt(id.toString());
                //upsTable.setId_cliente();
            } catch (Exception e) {
                System.err.println("Error: " + e.getMessage());
            }

        }


    }//GEN-LAST:event_jButtonListarUpsActionPerformed

    private void jButtonIngresarUpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIngresarUpsActionPerformed
        // TODO add your handling code here:

        int filaSeleccionada = jTableClientes.getSelectedRow();
        if (filaSeleccionada >= 0) {
            Object id = jTableClientes.getValueAt(filaSeleccionada, 0);

            //JOptionPane.showMessageDialog(null, "El ide seleccionado tiene el id; " + Integer.parseInt(id.toString()));
            try {
                
                InsertUps insertEquipo = new InsertUps();
                insertEquipo.setId_cliente(Integer.parseInt(id.toString()));
                Cliente c = new Cliente();
                c = c.findClienteById(Integer.parseInt(id.toString()));
                insertEquipo.setCliente(c);
                insertEquipo.insertText();
                dashboard.add(insertEquipo, "insertequipo");
                cardLayout.show(dashboard, "insertequipo");

            } catch (Exception e) {
                System.err.println("Error: " + e.getMessage());
            }

        }

    }//GEN-LAST:event_jButtonIngresarUpsActionPerformed

    //  Métodos de la tabla
    //  Cargamos la tabla con cliente
    //  Este método nos sirve para carga una tabla desde la BD
    public void cargarTabla() throws SQLException {
        try {

            List<Cliente> listaClientes = new ArrayList();
            Cliente cliente = new Cliente();
            listaClientes = cliente.listarClientes();       //  Listamos a los clientes en un objeto tipo  lista

            //   Aqui tomamos el objeto de tipo Cliente y lo convertimos a objeto bidimencional o array bidimencional
            Object[][] data = new Object[listaClientes.size()][6];
            //   Recorremos un bucle for con la dimención del objeto
            for (int i = 0; i < listaClientes.size(); i++) {
                Cliente c = listaClientes.get(i);
                data[i][0] = c.getId_cliente();
                data[i][1] = c.getPrimerNombre_usuario();
                data[i][2] = c.getPrimerApellido_usuario();
                data[i][3] = c.getEmail_usuario();
                data[i][4] = c.getRazonSocial_cliente();
                data[i][5] = (c.getActive()) ? "Activo" : "Inactivo";
            }

            //   Seteamos las columnas, agregandoles el nombre a cada una
            String[] columnas = {"Id", "Nombre", "Apellido", "Email", "Razón Social", "Estado"};

            //   Creamos una DefaultTableMode
            DefaultTableModel modelo = new DefaultTableModel(data, columnas);
            jTableClientes.setModel(modelo);
            jTableClientes.setAutoCreateRowSorter(true);

        } catch (SQLException e) {
            System.err.print("Error Jtable: " + e.getMessage());
        }
    }

    public int getIdSelectedRow() {
        int id = 0;
        int filaSeleccionada = jTableClientes.getSelectedRow();
        if (filaSeleccionada >= 0) {
            Object id_object = jTableClientes.getValueAt(filaSeleccionada, 0);
            id = Integer.parseInt(id_object.toString());

        }
        return id;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonIngresarUps;
    private javax.swing.JButton jButtonInicio;
    private javax.swing.JButton jButtonListarUps;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableClientes;
    // End of variables declaration//GEN-END:variables
}
