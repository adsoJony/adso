/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.Cliente;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import view.cliente.BuscarClienteByDoc;
import view.cliente.InsertCliente;
import view.cliente.ListarClientes;
import view.cliente.UpdateCliente;
import view.equipos.InsertEquipo;
import view.equipos.ListarEquipos;
import view.equipos.UpdateEquipo;
import view.colaborador.InsertStakeholder;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jogof
 */
public class DashBoardAdso extends JFrame {

    //JPanel dashboard;
    // CardLayout cardLayout;
    // InsertCliente insertCliente;
    //InsertEquipo insertEquipo;
    public CardLayout cardLayout = new CardLayout();
    JPanel dashboard = new JPanel(cardLayout);
    InsertCliente insertCliente;
    InsertEquipo insertEquipo = new InsertEquipo();
    InsertStakeholder insertStakeholder = new InsertStakeholder();
    DashBoardPanel dashBoardPanel = new DashBoardPanel();
    UpdateEquipo updateEquipo = new UpdateEquipo();
    UpdateCliente updateCliente;
    ListarClientes listarClientes = new ListarClientes();
    ListarEquipos listarEquipos = new ListarEquipos();
    
    BuscarClienteByDoc buscarClienteByDoc = new BuscarClienteByDoc();
    
   
    
    public DashBoardAdso() throws SQLException {
        this.insertCliente = new InsertCliente();
        this.updateCliente = new UpdateCliente();
        
        
        initComponents();

        //add(insertCliente);
        getContentPane().removeAll(); // eliminar lo generado por NetBeans
        getContentPane().setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));
        //getContentPane().add(dashboard);

        dashboard.add(dashBoardPanel, "dashboardpanel");
        dashboard.add(insertCliente, "insertcliente");
        dashboard.add(insertEquipo, "insertequipo");
        dashboard.add(insertStakeholder, "insertStakeholder");
        dashboard.add(updateEquipo, "updateEquipo");
        dashboard.add(updateCliente, "updateCliente");
        dashboard.add(listarEquipos, "listarEquipos");
        dashboard.add(listarClientes, "listarClientes");
        dashboard.add(buscarClienteByDoc, "buscarClienteByDoc");
        add(dashboard);
        cardLayout.show(dashboard, "dashboardpanel");

        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        ingresarClienteJMenuItem = new javax.swing.JMenuItem();
        listarCLientesJMenuItem = new javax.swing.JMenuItem();
        jMenuItemUpdateCliente = new javax.swing.JMenuItem();
        buscarClienteByIdJMenuItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        ingresarEquipoJMenuItem = new javax.swing.JMenuItem();
        listarEquiposJMenuItem = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemDasboard = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));
        setPreferredSize(new java.awt.Dimension(900, 600));

        jMenu1.setText("Acciones");

        jMenu3.setText("Cliente");

        ingresarClienteJMenuItem.setText("Ingresar CLiente");
        ingresarClienteJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarClienteJMenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(ingresarClienteJMenuItem);

        listarCLientesJMenuItem.setText("Listar Clientes");
        listarCLientesJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarCLientesJMenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(listarCLientesJMenuItem);

        jMenuItemUpdateCliente.setText("UpdateCliente");
        jMenuItemUpdateCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUpdateClienteActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemUpdateCliente);

        buscarClienteByIdJMenuItem.setText("Buscar Clitente por Documento");
        buscarClienteByIdJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarClienteByIdJMenuItemActionPerformed(evt);
            }
        });
        jMenu3.add(buscarClienteByIdJMenuItem);

        jMenuItem1.setText("Eliminar Cliente");
        jMenu3.add(jMenuItem1);

        jMenu1.add(jMenu3);

        jMenu4.setText("Equipo");

        ingresarEquipoJMenuItem.setText("Ingresar");
        ingresarEquipoJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarEquipoJMenuItemActionPerformed(evt);
            }
        });
        jMenu4.add(ingresarEquipoJMenuItem);

        listarEquiposJMenuItem.setText("Listar Equipos");
        listarEquiposJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarEquiposJMenuItemActionPerformed(evt);
            }
        });
        jMenu4.add(listarEquiposJMenuItem);

        jMenuItem5.setText("Eliminar Equipo");
        jMenu4.add(jMenuItem5);

        jMenu1.add(jMenu4);

        jMenu5.setText("Colaboradores");

        jMenuItem7.setText("Ingresar Colaborador");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);

        jMenuItem8.setText("Listar Colaboradores");
        jMenu5.add(jMenuItem8);

        jMenuItem9.setText("Eliminar colaborador");
        jMenu5.add(jMenuItem9);

        jMenu1.add(jMenu5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Salir");

        jMenuItemDasboard.setText("Dashboard");
        jMenuItemDasboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDasboardActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemDasboard);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ingresarClienteJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarClienteJMenuItemActionPerformed
        // TODO add your handling code here:
        cardLayout.show(dashboard, "insertcliente");
        //JOptionPane.showMessageDialog(null, "Ingresar Cliente");
    }//GEN-LAST:event_ingresarClienteJMenuItemActionPerformed

    private void ingresarEquipoJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarEquipoJMenuItemActionPerformed
        // TODO add your handling code here:
        cardLayout.show(dashboard, "insertequipo");

    }//GEN-LAST:event_ingresarEquipoJMenuItemActionPerformed

    private void buscarClienteByIdJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarClienteByIdJMenuItemActionPerformed
        // TODO add your handling code here:
        cardLayout.show(dashboard, "buscarClienteByDoc");
    }//GEN-LAST:event_buscarClienteByIdJMenuItemActionPerformed

    private void listarCLientesJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarCLientesJMenuItemActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Hola mundo accionado por Listar cliente");
        cardLayout.show(dashboard, "listarClientes");
    }//GEN-LAST:event_listarCLientesJMenuItemActionPerformed

    private void listarEquiposJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarEquiposJMenuItemActionPerformed
        // TODO add your handling code here:
        cardLayout.show(dashboard, "listarEquipos");

    }//GEN-LAST:event_listarEquiposJMenuItemActionPerformed

    private void jMenuItemUpdateClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUpdateClienteActionPerformed
        // TODO add your handling code here:

        cardLayout.show(dashboard, "updateCliente");
    }//GEN-LAST:event_jMenuItemUpdateClienteActionPerformed

    private void jMenuItemDasboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDasboardActionPerformed
        // TODO add your handling code here:
        
        cardLayout.show(dashboard, "dashboardpanel");
        
    }//GEN-LAST:event_jMenuItemDasboardActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        cardLayout.show(dashboard, "insertStakeholder");
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashBoardAdso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashBoardAdso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashBoardAdso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashBoardAdso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new DashBoardAdso().setVisible(true);
                } catch (SQLException ex) {
                    //Logger.getLogger(DashBoardAdso.class.getName()).log(Level.SEVERE, null, ex);
                    System.err.println("Error Runnable Invoque Later: " + ex);
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem buscarClienteByIdJMenuItem;
    private javax.swing.JMenuItem ingresarClienteJMenuItem;
    private javax.swing.JMenuItem ingresarEquipoJMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemDasboard;
    private javax.swing.JMenuItem jMenuItemUpdateCliente;
    private javax.swing.JMenuItem listarCLientesJMenuItem;
    private javax.swing.JMenuItem listarEquiposJMenuItem;
    // End of variables declaration//GEN-END:variables
}
